import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,e as n,o as r}from"./app-D216szki.js";const l={};function o(s,t){return r(),a("div",null,t[0]||(t[0]=[n('<br><p><img src="http://cdn.leemuzi.com/weblog/jiyu.png" style="zoom:10%;">作者寄语：</p><p>事务与并发控制是数据库系统的核心机制，确保在多用户同时操作数据时，系统仍能维持数据的一致性和可靠性。本节将简单介绍事务的ACID特性、并发引发的问题及解决方案（如隔离级别和锁机制）。</p><h2 id="事务的acid特性" tabindex="-1"><a class="header-anchor" href="#事务的acid特性"><span>事务的ACID特性</span></a></h2><p>事务（Transaction）是数据库操作的逻辑单元，满足以下四个特性：</p><table><thead><tr><th style="text-align:left;"><strong>特性</strong></th><th style="text-align:left;"><strong>描述</strong></th><th style="text-align:left;"><strong>示例</strong></th></tr></thead><tbody><tr><td style="text-align:left;"><strong>原子性（Atomicity）</strong></td><td style="text-align:left;">事务内的操作要么全部成功，要么全部失败（回滚）。</td><td style="text-align:left;">转账操作：A账户扣款和B账户入账必须同时成功或失败。</td></tr><tr><td style="text-align:left;"><strong>一致性（Consistency）</strong></td><td style="text-align:left;">事务执行前后，数据库必须处于一致状态（符合业务规则）。</td><td style="text-align:left;">订单支付后，库存必须减少，总金额必须匹配。</td></tr><tr><td style="text-align:left;"><strong>隔离性（Isolation）</strong></td><td style="text-align:left;">并发执行的事务互不干扰，如同串行执行。</td><td style="text-align:left;">用户A查询库存时，用户B的扣减操作不应导致A看到中间状态。</td></tr><tr><td style="text-align:left;"><strong>持久性（Durability）</strong></td><td style="text-align:left;">事务提交后，对数据的修改永久保存，即使系统崩溃也不丢失。</td><td style="text-align:left;">转账成功后，即使数据库宕机，恢复后数据仍为转账后的状态。</td></tr></tbody></table><h2 id="并发引发的数据问题" tabindex="-1"><a class="header-anchor" href="#并发引发的数据问题"><span>并发引发的数据问题</span></a></h2><p>当多个事务并发执行时，可能引发以下问题：</p><table><thead><tr><th style="text-align:left;"><strong>问题</strong></th><th style="text-align:left;"><strong>描述</strong></th><th style="text-align:left;"><strong>示例</strong></th></tr></thead><tbody><tr><td style="text-align:left;"><strong>脏读（Dirty Read）</strong></td><td style="text-align:left;">事务A读取了事务B未提交的数据，B可能回滚，导致A读到无效数据。</td><td style="text-align:left;">用户A看到订单状态为“已支付”，但支付事务未提交，最终回滚。</td></tr><tr><td style="text-align:left;"><strong>不可重复读（Non-Repeatable Read）</strong></td><td style="text-align:left;">事务A多次读取同一数据，事务B在此期间修改了该数据，导致A两次读取结果不一致。</td><td style="text-align:left;">用户A两次查询库存，中间有用户B下单导致库存减少，结果不一致。</td></tr><tr><td style="text-align:left;"><strong>幻读（Phantom Read）</strong></td><td style="text-align:left;">事务A读取了符合条件的数据集，事务B插入新数据，导致A再次读取时出现“幻影行”。</td><td style="text-align:left;">用户A查询价格&lt;100的商品有5件，事务B新增一件后，A再次查询变为6件。</td></tr></tbody></table>',9)]))}const c=e(l,[["render",o],["__file","transaction-concurrent.html.vue"]]),g=JSON.parse('{"path":"/system-architecture/database/transaction-concurrent.html","title":"事务与并发控制","lang":"zh-CN","frontmatter":{"title":"事务与并发控制","order":3,"author":"李木子","category":["事务与并发控制"],"description":"作者寄语： 事务与并发控制是数据库系统的核心机制，确保在多用户同时操作数据时，系统仍能维持数据的一致性和可靠性。本节将简单介绍事务的ACID特性、并发引发的问题及解决方案（如隔离级别和锁机制）。 事务的ACID特性 事务（Transaction）是数据库操作的逻辑单元，满足以下四个特性： 并发引发的数据问题 当多个事务并发执行时，可能引发以下问题：","head":[["meta",{"property":"og:url","content":"https://github.com/Lee-mu-zi/Lee-mu-zi.github.io/system-architecture/database/transaction-concurrent.html"}],["meta",{"property":"og:site_name","content":"Muzi Lee"}],["meta",{"property":"og:title","content":"事务与并发控制"}],["meta",{"property":"og:description","content":"作者寄语： 事务与并发控制是数据库系统的核心机制，确保在多用户同时操作数据时，系统仍能维持数据的一致性和可靠性。本节将简单介绍事务的ACID特性、并发引发的问题及解决方案（如隔离级别和锁机制）。 事务的ACID特性 事务（Transaction）是数据库操作的逻辑单元，满足以下四个特性： 并发引发的数据问题 当多个事务并发执行时，可能引发以下问题："}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-12T04:56:02.000Z"}],["meta",{"property":"article:author","content":"李木子"}],["meta",{"property":"article:modified_time","content":"2025-04-12T04:56:02.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"事务与并发控制\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-04-12T04:56:02.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"李木子\\"}]}"]]},"headers":[{"level":2,"title":"事务的ACID特性","slug":"事务的acid特性","link":"#事务的acid特性","children":[]},{"level":2,"title":"并发引发的数据问题","slug":"并发引发的数据问题","link":"#并发引发的数据问题","children":[]}],"git":{"createdTime":1744433762000,"updatedTime":1744433762000,"contributors":[{"name":"lee","username":"lee","email":"li15237845367@163.com","commits":1,"url":"https://github.com/lee"}]},"readingTime":{"minutes":1.95,"words":585},"filePathRelative":"system-architecture/database/transaction-concurrent.md","localizedDate":"2025年4月12日","excerpt":"<br>","autoDesc":true}');export{c as comp,g as data};
