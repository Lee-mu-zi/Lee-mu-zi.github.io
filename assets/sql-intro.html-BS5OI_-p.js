import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,e as r,o as n}from"./app-CThtgbfM.js";const s={};function a(i,t){return n(),o("div",null,t[0]||(t[0]=[r('<br><p><img src="http://cdn.leemuzi.com/weblog/jiyu.png" style="zoom:10%;">作者寄语：</p><h2 id="数据库基础" tabindex="-1"><a class="header-anchor" href="#数据库基础"><span>数据库基础</span></a></h2><p><strong>数据库：</strong> 保存有组织的数据的容器。</p><p><strong>表：</strong> 某种特定类型数据的结构化清单。同一个数据库中每个表都有一个名字，作为唯一标识，不允许重复。</p><p><strong>模式：</strong> 关于数据库和表的布局及特性的信息。</p><p><strong>列：</strong> 表中的一个字段，所有表都是由一个或多个列组成的。</p><p><strong>数据类型：</strong> 所容许的数据的类型。每个表列都有相应的数据类型，限制该列中存储的数据。</p><p><strong>行：</strong> 表中的一个记录。</p><p><strong>主键：</strong> 一列或一组列，其值能够唯一区分表中的每一行。主键应注意：不更新不重用主键列中的值，不要使用可能会更改的值作为主键</p><h2 id="什么是sql" tabindex="-1"><a class="header-anchor" href="#什么是sql"><span>什么是SQL</span></a></h2><p>SQL是结构化查询语言(Structured Query Language)的缩写。SQL是专门用来与数据库通信的语言。并有如下特点：</p><ul><li>通用性：SQL不是某种特定数据库供应商的专有语言，几乎所有重要的DBMS都支持SQL。</li><li>简洁性：它的语句全都是由描述性很强的英语单词组成，而且这些单词的数目不多。</li><li>灵活性：SQL尽管看上去很简单，但它实际上是一种强有力的语言，灵活使用其语言元素，可以进行非常复杂和高级的数据库操作。</li></ul>',13)]))}const m=e(s,[["render",a],["__file","sql-intro.html.vue"]]),c=JSON.parse('{"path":"/notes/mysql/sql-intro.html","title":"第一章 了解SQL","lang":"zh-CN","frontmatter":{"title":"第一章 了解SQL","cover":"/assets/images/cover1.jpg","order":1,"author":"李木子","date":"2020-01-01T00:00:00.000Z","category":["MySQL"],"tag":["MySQL基础"],"sticky":false,"star":false,"editLink":false,"description":"作者寄语： 数据库基础 数据库： 保存有组织的数据的容器。 表： 某种特定类型数据的结构化清单。同一个数据库中每个表都有一个名字，作为唯一标识，不允许重复。 模式： 关于数据库和表的布局及特性的信息。 列： 表中的一个字段，所有表都是由一个或多个列组成的。 数据类型： 所容许的数据的类型。每个表列都有相应的数据类型，限制该列中存储的数据。 行： 表中的...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/notes/mysql/sql-intro.html"}],["meta",{"property":"og:site_name","content":"李木子"}],["meta",{"property":"og:title","content":"第一章 了解SQL"}],["meta",{"property":"og:description","content":"作者寄语： 数据库基础 数据库： 保存有组织的数据的容器。 表： 某种特定类型数据的结构化清单。同一个数据库中每个表都有一个名字，作为唯一标识，不允许重复。 模式： 关于数据库和表的布局及特性的信息。 列： 表中的一个字段，所有表都是由一个或多个列组成的。 数据类型： 所容许的数据的类型。每个表列都有相应的数据类型，限制该列中存储的数据。 行： 表中的..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://mister-hope.github.io/assets/images/cover1.jpg"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-05T15:51:38.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://mister-hope.github.io/assets/images/cover1.jpg"}],["meta",{"name":"twitter:image:alt","content":"第一章 了解SQL"}],["meta",{"property":"article:author","content":"李木子"}],["meta",{"property":"article:tag","content":"MySQL基础"}],["meta",{"property":"article:published_time","content":"2020-01-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-03-05T15:51:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"第一章 了解SQL\\",\\"image\\":[\\"https://mister-hope.github.io/assets/images/cover1.jpg\\"],\\"datePublished\\":\\"2020-01-01T00:00:00.000Z\\",\\"dateModified\\":\\"2025-03-05T15:51:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"李木子\\"}]}"]]},"headers":[{"level":2,"title":"数据库基础","slug":"数据库基础","link":"#数据库基础","children":[]},{"level":2,"title":"什么是SQL","slug":"什么是sql","link":"#什么是sql","children":[]}],"git":{"createdTime":1741189898000,"updatedTime":1741189898000,"contributors":[{"name":"lee","username":"lee","email":"li15237845367@163.com","commits":1,"url":"https://github.com/lee"}]},"readingTime":{"minutes":1.75,"words":524},"filePathRelative":"notes/mysql/sql-intro.md","localizedDate":"2020年1月1日","excerpt":"<br>\\n<p><img src=\\"http://cdn.leemuzi.com/weblog/jiyu.png\\" style=\\"zoom:10%;\\">作者寄语：</p>\\n<h2>数据库基础</h2>\\n<p><strong>数据库：</strong> 保存有组织的数据的容器。</p>\\n<p><strong>表：</strong> 某种特定类型数据的结构化清单。同一个数据库中每个表都有一个名字，作为唯一标识，不允许重复。</p>\\n<p><strong>模式：</strong> 关于数据库和表的布局及特性的信息。</p>\\n<p><strong>列：</strong> 表中的一个字段，所有表都是由一个或多个列组成的。</p>","autoDesc":true}');export{m as comp,c as data};
