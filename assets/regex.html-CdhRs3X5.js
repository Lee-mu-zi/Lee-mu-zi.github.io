import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,a as e,e as i,b as a,d,o as n}from"./app-DS83-iHM.js";const r={};function o(h,t){return n(),s("div",null,[t[0]||(t[0]=e("br",null,null,-1)),t[1]||(t[1]=e("p",null,[e("img",{src:"http://cdn.leemuzi.com/weblog/jiyu.png",style:{zoom:"10%"}}),i("作者寄语：")],-1)),t[2]||(t[2]=e("p",null,"正则表达式（Regular Expression 简称Regex）是一种用于匹配、查找或替换文本模式的工具。它通过特定的语法规则来描述字符串的结构，广泛应用于文本处理、数据验证、日志分析等领域。",-1)),t[3]||(t[3]=e("p",null,"正则表达式即简单也难，简单就是它并不复杂，也不需要记忆太多的东西。难的是如何正确使用和最优解。",-1)),t[4]||(t[4]=e("p",null,[i("就像国内的手机号，编写正则的时候我可以为每一位都写一个对应的规则，是不是显得十分麻烦。但是如果这样写："),e("code",null,"^1[3-9]\\d{9}$"),i("是不是非常简短，当然它的功能是完全正常的。")],-1)),a(" more "),t[5]||(t[5]=d(`<h2 id="一、基础语法" tabindex="-1"><a class="header-anchor" href="#一、基础语法"><span>一、基础语法</span></a></h2><h3 id="_1、字符匹配" tabindex="-1"><a class="header-anchor" href="#_1、字符匹配"><span>1、字符匹配</span></a></h3><p><strong>（1）普通字符</strong></p><p>直接匹配字符本身：这种方式就是将搜索确定的字符信息。与在浏览器中使用<code>ctrl + f</code>是类似的。</p><p>也就是说只能进行完全匹配，多一个或少一个都不可以，并且区分大小写。</p><figure><img src="http://cdn.leemuzi.com/image-20250518223443412.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>（2）元字符（特殊符号）</strong></p><table><thead><tr><th style="text-align:left;">符号</th><th style="text-align:left;">含义</th><th style="text-align:left;">示例</th></tr></thead><tbody><tr><td style="text-align:left;"><code>.</code></td><td style="text-align:left;">匹配<strong>任意单个字符</strong></td><td style="text-align:left;"><code>a.c</code> → &quot;abc&quot;, &quot;a1c&quot;</td></tr><tr><td style="text-align:left;"><code>\\d</code></td><td style="text-align:left;">数字（等价于 <code>[0-9]</code>）</td><td style="text-align:left;"><code>\\d\\d</code> → &quot;42&quot;</td></tr><tr><td style="text-align:left;"><code>\\D</code></td><td style="text-align:left;">非数字（等价于 <code>[^0-9]</code>）</td><td style="text-align:left;"><code>\\D</code> → &quot;A&quot;</td></tr><tr><td style="text-align:left;"><code>\\w</code></td><td style="text-align:left;">单词字符（字母、数字、下划线）</td><td style="text-align:left;"><code>\\w+</code> → &quot;User123&quot;</td></tr><tr><td style="text-align:left;"><code>\\W</code></td><td style="text-align:left;">非单词字符</td><td style="text-align:left;"><code>\\W</code> → &quot;@&quot;</td></tr><tr><td style="text-align:left;"><code>\\s</code></td><td style="text-align:left;">空白字符（空格、制表符、换行等）</td><td style="text-align:left;"><code>\\s+</code> → &quot; &quot;</td></tr><tr><td style="text-align:left;"><code>\\S</code></td><td style="text-align:left;">非空白字符</td><td style="text-align:left;"><code>\\S</code> → &quot;A&quot;</td></tr><tr><td style="text-align:left;"><code>\\t</code></td><td style="text-align:left;">匹配一个制表符</td><td style="text-align:left;"><code>\\t</code> → &quot; &quot;</td></tr><tr><td style="text-align:left;"><code>\\v</code></td><td style="text-align:left;">匹配一个垂直制表符</td><td style="text-align:left;"></td></tr></tbody></table><p><strong>（3）字符合集<code>[]</code></strong></p><ul><li><strong>单字符匹配</strong>：<code>[aeiou]</code> 匹配任意一个元音字母。</li><li><strong>范围匹配</strong>：<code>[a-z]</code> 匹配小写字母，<code>[0-9A-F]</code> 匹配十六进制字符。</li><li><strong>排除匹配</strong>：<code>[^0-9]</code> 匹配非数字字符。</li></ul><p><strong>（4）转义字符<code>/</code></strong></p><p>若需匹配元字符本身（如 <code>.</code>、<code>*</code>、<code>$</code>），需用 <code>\\</code> 转义：</p><div class="language-regex line-numbers-mode" data-highlighter="shiki" data-ext="regex" data-title="regex" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\.</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">     # 匹配 &quot;.&quot; </span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\\\</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">     # 匹配 &quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2、量词" tabindex="-1"><a class="header-anchor" href="#_2、量词"><span>2、量词</span></a></h3><table><thead><tr><th style="text-align:left;">量词</th><th style="text-align:left;">含义</th><th style="text-align:left;">示例</th></tr></thead><tbody><tr><td style="text-align:left;"><code>*</code></td><td style="text-align:left;">0次或多次（贪婪）</td><td style="text-align:left;"><code>a*</code> → &quot;&quot;, &quot;a&quot;, &quot;aaa&quot;</td></tr><tr><td style="text-align:left;"><code>+</code></td><td style="text-align:left;">1次或多次（贪婪）</td><td style="text-align:left;"><code>\\d+</code> → &quot;1&quot;, &quot;123&quot;</td></tr><tr><td style="text-align:left;"><code>?</code></td><td style="text-align:left;">0次或1次（贪婪）</td><td style="text-align:left;"><code>colou?r</code> → &quot;color&quot;/&quot;colour&quot;</td></tr><tr><td style="text-align:left;"><code>{n}</code></td><td style="text-align:left;">精确匹配n次</td><td style="text-align:left;"><code>a{3}</code> → &quot;aaa&quot;</td></tr><tr><td style="text-align:left;"><code>{n,}</code></td><td style="text-align:left;">至少n次</td><td style="text-align:left;"><code>\\d{2,}</code> → &quot;12&quot;, &quot;123&quot;</td></tr><tr><td style="text-align:left;"><code>{n,m}</code></td><td style="text-align:left;">匹配n到m次</td><td style="text-align:left;"><code>a{2,4}</code> → &quot;aa&quot;, &quot;aaaa&quot;</td></tr></tbody></table><p><strong>贪婪 vs 非贪婪模式</strong></p><ul><li><p><strong>贪婪模式</strong>（默认）：尽可能多匹配</p><div class="language-regex line-numbers-mode" data-highlighter="shiki" data-ext="regex" data-title="regex" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;.</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;     # 匹配整个 &quot;&lt;div&gt;content&lt;/div&gt;&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p><strong>非贪婪模式</strong>（量词后加 <code>?</code>）：尽可能少匹配</p><div class="language-regex line-numbers-mode" data-highlighter="shiki" data-ext="regex" data-title="regex" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;.</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">*?</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;    # 匹配 &quot;&lt;div&gt;&quot; 和 &quot;&lt;/div&gt;&quot; 两个标签</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><h3 id="_3、位置锚点" tabindex="-1"><a class="header-anchor" href="#_3、位置锚点"><span>3、位置锚点</span></a></h3><table><thead><tr><th style="text-align:left;">锚点</th><th style="text-align:left;">含义</th><th style="text-align:left;">示例</th></tr></thead><tbody><tr><td style="text-align:left;"><code>^</code></td><td style="text-align:left;">字符串开头</td><td style="text-align:left;"><code>^Start</code> → 匹配以 &quot;Start&quot; 开头的行</td></tr><tr><td style="text-align:left;"><code>$</code></td><td style="text-align:left;">字符串结尾</td><td style="text-align:left;"><code>end$</code> → 匹配以 &quot;end&quot; 结尾的行</td></tr><tr><td style="text-align:left;"><code>\\b</code></td><td style="text-align:left;">单词边界</td><td style="text-align:left;"><code>\\bcat\\b</code> → 匹配独立的单词 &quot;cat&quot;</td></tr><tr><td style="text-align:left;"><code>\\B</code></td><td style="text-align:left;">非单词边界</td><td style="text-align:left;"><code>\\Bcat\\B</code> → 匹配 &quot;category&quot; 中的 &quot;cat&quot;</td></tr></tbody></table><h2 id="二、高级技巧" tabindex="-1"><a class="header-anchor" href="#二、高级技巧"><span>二、高级技巧</span></a></h2><h3 id="_1、零宽断言-lookaround" tabindex="-1"><a class="header-anchor" href="#_1、零宽断言-lookaround"><span>1、<strong>零宽断言（Lookaround）</strong></span></a></h3><table><thead><tr><th style="text-align:left;">语法</th><th style="text-align:left;">名称</th><th style="text-align:left;">作用</th><th style="text-align:left;">示例</th></tr></thead><tbody><tr><td style="text-align:left;"><code>(?=pattern)</code></td><td style="text-align:left;">正向先行断言</td><td style="text-align:left;">匹配后面是 pattern 的位置</td><td style="text-align:left;"><code>\\d+(?=px)</code> → &quot;100&quot;（在 &quot;100px&quot; 中）</td></tr><tr><td style="text-align:left;"><code>(?&lt;=pattern)</code></td><td style="text-align:left;">正向后行断言</td><td style="text-align:left;">匹配前面是 pattern 的位置</td><td style="text-align:left;"><code>(?&lt;=\\$)\\d+</code> → &quot;50&quot;（在 &quot;$50&quot; 中）</td></tr><tr><td style="text-align:left;"><code>(?!pattern)</code></td><td style="text-align:left;">负向先行断言</td><td style="text-align:left;">匹配后面不是 pattern 的位置</td><td style="text-align:left;"><code>\\d{3}(?!\\d)</code> → &quot;123&quot;（不在 &quot;1234&quot; 中）</td></tr><tr><td style="text-align:left;"><code>(?&lt;!pattern)</code></td><td style="text-align:left;">负向后行断言</td><td style="text-align:left;">匹配前面不是 pattern 的位置</td><td style="text-align:left;"><code>(?&lt;!-)\\d+</code> → &quot;42&quot;（在 &quot;x42&quot; 中，但不在 &quot;-42&quot; 中）</td></tr></tbody></table><p><strong>示例：提取价格中的数值</strong></p><div class="language-regex line-numbers-mode" data-highlighter="shiki" data-ext="regex" data-title="regex" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(?&lt;=</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\$</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)\\d</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">+</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\.</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">\\d</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">{2}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  # 匹配 &quot;$19.99&quot; 中的 &quot;19.99&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_2、模式修饰符" tabindex="-1"><a class="header-anchor" href="#_2、模式修饰符"><span><strong>2、模式修饰符</strong></span></a></h3><p>通过修饰符改变匹配规则（不同语言语法可能不同）：</p><table><thead><tr><th style="text-align:left;">修饰符</th><th style="text-align:left;">说明</th><th style="text-align:left;">示例</th></tr></thead><tbody><tr><td style="text-align:left;"><code>i</code></td><td style="text-align:left;">忽略大小写</td><td style="text-align:left;"><code>/apple/i</code> → 匹配 &quot;Apple&quot;</td></tr><tr><td style="text-align:left;"><code>g</code></td><td style="text-align:left;">全局匹配（查找所有）</td><td style="text-align:left;">默认只匹配第一个，<code>g</code> 匹配所有</td></tr><tr><td style="text-align:left;"><code>m</code></td><td style="text-align:left;">多行模式（<code>^</code> 和 <code>$</code> 匹配每行的开头结尾）</td><td style="text-align:left;">处理多行文本时使用</td></tr><tr><td style="text-align:left;"><code>s</code></td><td style="text-align:left;">单行模式（<code>.</code> 包含换行符）</td><td style="text-align:left;">匹配跨行内容</td></tr></tbody></table><h2 id="三、实战案例解析" tabindex="-1"><a class="header-anchor" href="#三、实战案例解析"><span>三、实战案例解析</span></a></h2><h3 id="_1、邮箱验证" tabindex="-1"><a class="header-anchor" href="#_1、邮箱验证"><span>1、<strong>邮箱验证</strong></span></a></h3><div class="language-regex line-numbers-mode" data-highlighter="shiki" data-ext="regex" data-title="regex" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">^</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">[a-zA-Z0-9._%+-]</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">[a-zA-Z0-9.-]</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">+</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">[a-zA-Z]</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">{2,}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">$</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><strong>分解</strong>： <ul><li><code>^[a-zA-Z0-9._%+-]+</code>：用户名部分（允许字母、数字、特殊符号）</li><li><code>@</code>：必须的 @ 符号</li><li><code>[a-zA-Z0-9.-]+</code>：域名部分（如 &quot;gmail&quot;、&quot;yahoo&quot;）</li><li><code>\\.[a-zA-Z]{2,}$</code>：顶级域名（如 &quot;.com&quot;、&quot;.org&quot;，至少2位字母）</li></ul></li></ul><hr><h3 id="_2、手机号验证-中国大陆" tabindex="-1"><a class="header-anchor" href="#_2、手机号验证-中国大陆"><span>2、<strong>手机号验证（中国大陆）</strong></span></a></h3><div class="language-regex line-numbers-mode" data-highlighter="shiki" data-ext="regex" data-title="regex" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">^1</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">[3-9]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">\\d</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">{9}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">$           # 简单版（11位，第二位为3-9）</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h3 id="_3、强密码规则" tabindex="-1"><a class="header-anchor" href="#_3、强密码规则"><span>3、<strong>强密码规则</strong></span></a></h3><p>要求：至少8位，包含大小写字母和数字，允许特殊符号。</p><div class="language-regex line-numbers-mode" data-highlighter="shiki" data-ext="regex" data-title="regex" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">^(?=.</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">*</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">[a-z]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)(?=.</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">*</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">[A-Z]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)(?=.</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">\\d)(?=.</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">*</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">[!@#$%^&amp;*]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">).</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">{8,}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">$</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><strong>分解</strong>： <ul><li><code>(?=.*[a-z])</code>：必须包含小写字母</li><li><code>(?=.*[A-Z])</code>：必须包含大写字母</li><li><code>(?=.*\\d)</code>：必须包含数字</li><li><code>(?=.*[!@#$%^&amp;*])</code>：必须包含特殊符号</li><li><code>.{8,}</code>：总长度至少8位</li></ul></li></ul><hr><h3 id="_4、url-解析" tabindex="-1"><a class="header-anchor" href="#_4、url-解析"><span>4、<strong>URL 解析</strong></span></a></h3><div class="language-regex line-numbers-mode" data-highlighter="shiki" data-ext="regex" data-title="regex" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">^</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">https</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">?</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">://</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">)?(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">[</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">\\w</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">-]</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">+</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\.</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">)+</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">[</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">\\w</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">-]</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">+(</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/\\S</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">*)?</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">$</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><strong>分解</strong>： <ul><li><code>(https?://)?</code>：可选的 http:// 或 https://</li><li><code>([\\w-]+\\.)+</code>：域名部分（如 &quot;<a href="http://www.google.%22" target="_blank" rel="noopener noreferrer">www.google.&quot;）</a>/)</li><li><code>[\\w-]+</code>：顶级域名（如 &quot;com&quot;）</li><li><code>(/\\S*)?</code>：可选的路径（如 &quot;/path/to/file?param=1&quot;）</li></ul></li></ul><h2 id="四、性能优化与避坑指南" tabindex="-1"><a class="header-anchor" href="#四、性能优化与避坑指南"><span>四、性能优化与避坑指南</span></a></h2><h3 id="_1、避免灾难性回溯" tabindex="-1"><a class="header-anchor" href="#_1、避免灾难性回溯"><span>1、避免灾难性回溯</span></a></h3><ul><li><strong>问题原因</strong>：嵌套量词（如 <code>(a+)+</code>）导致指数级计算量。</li><li><strong>解决方案</strong>： <ul><li>尽量使用具体匹配范围（如 <code>\\d{4}</code> 替代 <code>\\d+</code>）</li><li>避免嵌套重复（如 <code>(a|b)*</code> 改为 <code>[ab]*</code>）</li></ul></li></ul><h3 id="_2、合理使用锚点" tabindex="-1"><a class="header-anchor" href="#_2、合理使用锚点"><span>2、合理使用锚点</span></a></h3><ul><li><p>明确字符串边界，减少无效匹配：</p><div class="language-regex line-numbers-mode" data-highlighter="shiki" data-ext="regex" data-title="regex" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">^\\d</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">$     # 确保整个字符串都是数字</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><h2 id="五、工具与学习资源" tabindex="-1"><a class="header-anchor" href="#五、工具与学习资源"><span>五、工具与学习资源</span></a></h2><h3 id="_1、在线测试工具" tabindex="-1"><a class="header-anchor" href="#_1、在线测试工具"><span>1、在线测试工具</span></a></h3><ul><li><a href="https://regex101.com/" target="_blank" rel="noopener noreferrer">Regex101</a>：支持多语言（PCRE、Python、JavaScript），提供详细解释。</li><li><a href="https://regexr.com/" target="_blank" rel="noopener noreferrer">RegExr</a>：实时高亮反馈，适合快速调试。</li></ul><h3 id="_2、系统学习资源" tabindex="-1"><a class="header-anchor" href="#_2、系统学习资源"><span>2、系统学习资源</span></a></h3><ul><li>书籍：《精通正则表达式》（Mastering Regular Expressions）</li><li>教程：<a href="https://regexone.com/" target="_blank" rel="noopener noreferrer">RegexOne</a>（互动式学习）</li></ul><h3 id="_3、正则表达式语法速查" tabindex="-1"><a class="header-anchor" href="#_3、正则表达式语法速查"><span>3、正则表达式语法速查</span></a></h3><ul><li><a href="https://stackoverflow.org.cn/regexsucha/" target="_blank" rel="noopener noreferrer">语法速查</a>：不仅包含语法，还有常用正则表达式。</li></ul>`,55))])}const p=l(r,[["render",o],["__file","regex.html.vue"]]),k=JSON.parse('{"path":"/efficiency/tools/regex/regex.html","title":"正则表达式","lang":"zh-CN","frontmatter":{"title":"正则表达式","icon":"http://cdn.leemuzi.com/regex.png","order":1,"description":"作者寄语： 正则表达式（Regular Expression 简称Regex）是一种用于匹配、查找或替换文本模式的工具。它通过特定的语法规则来描述字符串的结构，广泛应用于文本处理、数据验证、日志分析等领域。 正则表达式即简单也难，简单就是它并不复杂，也不需要记忆太多的东西。难的是如何正确使用和最优解。 就像国内的手机号，编写正则的时候我可以为每一位都写...","head":[["meta",{"property":"og:url","content":"https://github.com/Lee-mu-zi/Lee-mu-zi.github.io/efficiency/tools/regex/regex.html"}],["meta",{"property":"og:site_name","content":"Muzi Lee"}],["meta",{"property":"og:title","content":"正则表达式"}],["meta",{"property":"og:description","content":"作者寄语： 正则表达式（Regular Expression 简称Regex）是一种用于匹配、查找或替换文本模式的工具。它通过特定的语法规则来描述字符串的结构，广泛应用于文本处理、数据验证、日志分析等领域。 正则表达式即简单也难，简单就是它并不复杂，也不需要记忆太多的东西。难的是如何正确使用和最优解。 就像国内的手机号，编写正则的时候我可以为每一位都写..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"http://cdn.leemuzi.com/image-20250518223443412.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-05-19T04:04:33.000Z"}],["meta",{"property":"article:modified_time","content":"2025-05-19T04:04:33.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"正则表达式\\",\\"image\\":[\\"http://cdn.leemuzi.com/image-20250518223443412.png\\"],\\"dateModified\\":\\"2025-05-19T04:04:33.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"一、基础语法","slug":"一、基础语法","link":"#一、基础语法","children":[{"level":3,"title":"1、字符匹配","slug":"_1、字符匹配","link":"#_1、字符匹配","children":[]},{"level":3,"title":"2、量词","slug":"_2、量词","link":"#_2、量词","children":[]},{"level":3,"title":"3、位置锚点","slug":"_3、位置锚点","link":"#_3、位置锚点","children":[]}]},{"level":2,"title":"二、高级技巧","slug":"二、高级技巧","link":"#二、高级技巧","children":[{"level":3,"title":"1、零宽断言（Lookaround）","slug":"_1、零宽断言-lookaround","link":"#_1、零宽断言-lookaround","children":[]},{"level":3,"title":"2、模式修饰符","slug":"_2、模式修饰符","link":"#_2、模式修饰符","children":[]}]},{"level":2,"title":"三、实战案例解析","slug":"三、实战案例解析","link":"#三、实战案例解析","children":[{"level":3,"title":"1、邮箱验证","slug":"_1、邮箱验证","link":"#_1、邮箱验证","children":[]},{"level":3,"title":"2、手机号验证（中国大陆）","slug":"_2、手机号验证-中国大陆","link":"#_2、手机号验证-中国大陆","children":[]},{"level":3,"title":"3、强密码规则","slug":"_3、强密码规则","link":"#_3、强密码规则","children":[]},{"level":3,"title":"4、URL 解析","slug":"_4、url-解析","link":"#_4、url-解析","children":[]}]},{"level":2,"title":"四、性能优化与避坑指南","slug":"四、性能优化与避坑指南","link":"#四、性能优化与避坑指南","children":[{"level":3,"title":"1、避免灾难性回溯","slug":"_1、避免灾难性回溯","link":"#_1、避免灾难性回溯","children":[]},{"level":3,"title":"2、合理使用锚点","slug":"_2、合理使用锚点","link":"#_2、合理使用锚点","children":[]}]},{"level":2,"title":"五、工具与学习资源","slug":"五、工具与学习资源","link":"#五、工具与学习资源","children":[{"level":3,"title":"1、在线测试工具","slug":"_1、在线测试工具","link":"#_1、在线测试工具","children":[]},{"level":3,"title":"2、系统学习资源","slug":"_2、系统学习资源","link":"#_2、系统学习资源","children":[]},{"level":3,"title":"3、正则表达式语法速查","slug":"_3、正则表达式语法速查","link":"#_3、正则表达式语法速查","children":[]}]}],"git":{"createdTime":1747627473000,"updatedTime":1747627473000,"contributors":[{"name":"lee","username":"lee","email":"li15237845367@163.com","commits":1,"url":"https://github.com/lee"}]},"readingTime":{"minutes":4.64,"words":1393},"filePathRelative":"efficiency/tools/regex/regex.md","localizedDate":"2025年5月19日","excerpt":"<br>\\n<p><img src=\\"http://cdn.leemuzi.com/weblog/jiyu.png\\" style=\\"zoom:10%;\\">作者寄语：</p>\\n<p>正则表达式（Regular Expression 简称Regex）是一种用于匹配、查找或替换文本模式的工具。它通过特定的语法规则来描述字符串的结构，广泛应用于文本处理、数据验证、日志分析等领域。</p>\\n<p>正则表达式即简单也难，简单就是它并不复杂，也不需要记忆太多的东西。难的是如何正确使用和最优解。</p>\\n<p>就像国内的手机号，编写正则的时候我可以为每一位都写一个对应的规则，是不是显得十分麻烦。但是如果这样写：<code>^1[3-9]\\\\d{9}$</code>是不是非常简短，当然它的功能是完全正常的。</p>\\n","autoDesc":true}');export{p as comp,k as data};
